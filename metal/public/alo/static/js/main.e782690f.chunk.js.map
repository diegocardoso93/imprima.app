{"version":3,"sources":["constants/endpoints.js","components/Header/index.js","components/Body/index.js","components/Loader/index.js","components/SvgMore/index.js","pages/PageItems/index.js","components/SvgBack/index.js","pages/PageDetail/index.js","pages/PageCheckout/index.js","pages/PageCheckoutInfo/index.js","App.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["BASE_API","GET_KIND","GET_PRODUCT","GET_MERCHANT","GET_CATEGORY","GET_CATEGORY_TYPE","GET_ATTRIBUTES","Header","children","className","onClick","history","go","parent","postMessage","active","Body","Loader","size","SvgMore","width","height","viewBox","style","transform","fill","d","PageItems","useState","items","setItems","loading","setLoading","useHistory","useEffect","x","window","onbeforeunload","e","dispose","onpopstate","fetch","replace","localStorage","getItem","then","res","json","val","href","target","rel","src","alt","map","item","push","id","location","search","select","thumb_url","name","SvgBack","xmlns","fillRule","PageDetail","useParams","loadingMerchants","setLoadingMerchants","merchants","setMerchants","categories","setCategories","images","setImages","show","swap","setSwap","expand","setExpand","cepRef","useRef","selected","setSelected","loadingImage","setLoadingImage","findMerchant","cep","current","value","setItem","JSON","stringify","address","catch","parse","zip","goBack","url","type","onChange","mode","event","category","type_id","c","i","ref","onKeyUp","key","placeholder","length","l","city","uf","price","delivery","PageCheckout","productId","merchantId","product","setProduct","merchant","setMerchant","attributes","setAttributes","attribute","selectAttribute","quantity","setQuantity","setPrice","priceTotal","setPriceTotal","updatePrice","q","p","a","alert","PageCheckoutInfo","App","path","exact","counterSlice","createSlice","initialState","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","configureStore","reducer","counter","counterReducer","Boolean","hostname","match","urlParams","URLSearchParams","get","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e782690f.chunk.js","sourcesContent":["export const BASE_API = 'https://imprima.app/api';\r\n// export const BASE_API = 'http://localhost:8000/api';\r\nexport const GET_KIND = `${BASE_API}/kind/{id}`;\r\nexport const GET_PRODUCT = `${BASE_API}/produto/{id}`;\r\nexport const GET_MERCHANT = `${BASE_API}/cep/{id}/{cep}`;\r\nexport const GET_CATEGORY = `${BASE_API}/category`;\r\nexport const GET_CATEGORY_TYPE = `${BASE_API}/category/{categoryId}/type/{typeId}`;\r\nexport const GET_ATTRIBUTES = `${BASE_API}/attributes/{productId}/{merchantId}`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.scss';\r\n\r\nexport default function Header({ children }) {\r\n  const dispose = () => {\r\n    history.go(-1);\r\n    parent.postMessage({ active: false }, '*');\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      {children}\r\n      <div className=\"close\" onClick={dispose}>\r\n        ×\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  children: PropTypes.any,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './style.scss';\r\n\r\nexport default function Body({ children }) {\r\n  return <div className=\"body\">{children}</div>;\r\n}\r\n\r\nBody.propTypes = {\r\n  children: PropTypes.any,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './style.scss';\r\n\r\nexport default function Loader({ size }) {\r\n  return (\r\n    <div className={`lds-ring ${size}`}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nLoader.propTypes = {\r\n  size: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function SvgMore({ size }) {\r\n  return (\r\n    <svg\r\n      width=\"23\"\r\n      height=\"39\"\r\n      viewBox=\"0 0 23 39\"\r\n      style={{\r\n        transform: `scale(${size === 'small' ? '1' : '0.8'})`,\r\n        fill: '#444',\r\n      }}\r\n    >\r\n      <path\r\n        className=\"slideshow-arrow\"\r\n        d=\"M857.005,231.479L858.5,230l18.124,18-18.127,18-1.49-1.48L873.638,248Z\"\r\n        transform=\"translate(-855 -230)\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\n\r\nSvgMore.propTypes = {\r\n  size: PropTypes.string,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { GET_KIND } from '../../constants/endpoints';\r\nimport Header from '../../components/Header';\r\nimport Body from '../../components/Body';\r\nimport Loader from '../../components/Loader';\r\n\r\nimport './style.scss';\r\nimport { useHistory } from 'react-router';\r\nimport SvgMore from '../../components/SvgMore';\r\n\r\nexport default function PageItems() {\r\n  const [items, setItems] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    let x = 0;\r\n    window.onbeforeunload = (e) => {\r\n      if (x == 0) {\r\n        dispose();\r\n        x = 1;\r\n      }\r\n    };\r\n    window.onpopstate = (e) => {\r\n      dispose();\r\n    };\r\n\r\n    // console.log('history', history);\r\n    // history.listen((location) => {\r\n    //   console.log('location', location);\r\n    //   if (location.action === 'POP') {\r\n    //     // Do your stuff\r\n    //   }\r\n    // });\r\n    return () => {\r\n      window.onbeforeunload = () => {};\r\n      window.onpopstate = () => {};\r\n    };\r\n  }, []);\r\n\r\n  const dispose = () => {\r\n    parent.postMessage({ active: false }, '*');\r\n  };\r\n\r\n  function select(item) {\r\n    history.push(`/alo/produto/${item.id}${location.search}`);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch(GET_KIND.replace('{id}', localStorage.getItem('kindId') || ''))\r\n      .then((res) => res.json())\r\n      .then((val) => {\r\n        setItems(val);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <div className=\"logo\">\r\n          <a\r\n            href=\"https://imprima.app\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            className=\"logo-link\"\r\n          >\r\n            <div className=\"inner\">\r\n              <img src=\"/img/logo_100.png\" alt=\"\" />\r\n            </div>\r\n          </a>\r\n\r\n          <h1>Comprar personalizado</h1>\r\n        </div>\r\n      </Header>\r\n\r\n      <Body>\r\n        {(loading && (\r\n          <div className=\"loader-container\">\r\n            <Loader size=\"large\" />\r\n          </div>\r\n        )) || (\r\n          <div className=\"page-items\">\r\n            <div className=\"options\">\r\n              {items.map((item) => (\r\n                <div\r\n                  key={item.name}\r\n                  className=\"option\"\r\n                  onClick={() => select(item)}\r\n                >\r\n                  <div className=\"left\">\r\n                    <img src={item.thumb_url} alt=\"\" className=\"image\" />\r\n                    <span>{item.name}</span>\r\n                  </div>\r\n                  <span className=\"select\">\r\n                    <SvgMore />\r\n                  </span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Body>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function SvgBack() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"16\"\r\n      height=\"16\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <g fill=\"none\" fillRule=\"evenodd\">\r\n        <path d=\"M0 0H16V16H0z\" transform=\"matrix(1 0 0 -1 0 16)\"></path>\r\n        <path\r\n          fill=\"#444\"\r\n          fillRule=\"nonzero\"\r\n          d=\"M7.631 1.333L6.368 0 0 6.667 6.368 13.333 7.631 12.001 3.428 7.6 13.333 7.601 13.333 5.743 3.418 5.742z\"\r\n          transform=\"matrix(1 0 0 -1 0 16) translate(1.333 1.333)\"\r\n        ></path>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport './style.scss';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  GET_MERCHANT,\r\n  GET_CATEGORY,\r\n  GET_CATEGORY_TYPE,\r\n  GET_PRODUCT,\r\n} from '../../constants/endpoints';\r\nimport Header from '../../components/Header';\r\nimport Body from '../../components/Body';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport SvgMore from '../../components/SvgMore';\r\nimport SvgBack from '../../components/SvgBack';\r\n\r\nexport default function PageDetail() {\r\n  const { id } = useParams();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingMerchants, setLoadingMerchants] = useState(false);\r\n  const [merchants, setMerchants] = useState(null);\r\n  const [categories, setCategories] = useState(null);\r\n  const [images, setImages] = useState(null);\r\n  const [swap, setSwap] = useState({ loading: false, show: false });\r\n  const [expand, setExpand] = useState(true);\r\n  const cepRef = useRef();\r\n  const [selected, setSelected] = useState();\r\n  const [loadingImage, setLoadingImage] = useState(false);\r\n  const history = useHistory();\r\n\r\n  function checkCEP(e) {\r\n    if (e.key === 'Enter') {\r\n      findMerchant();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch(GET_PRODUCT.replace('{id}', id))\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setSelected(res);\r\n\r\n        const address = JSON.parse(localStorage.getItem('address'));\r\n        if (address?.zip) {\r\n          cepRef.current.value = address.zip;\r\n          findMerchant();\r\n        }\r\n      })\r\n      .catch((e) => setLoading(false));\r\n  }, []);\r\n\r\n  function findMerchant() {\r\n    setLoadingMerchants(true);\r\n    const cep = cepRef.current.value;\r\n    fetch(GET_MERCHANT.replace('{id}', id).replace('{cep}', cep))\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setLoadingMerchants(false);\r\n        setMerchants(res.merchants);\r\n        localStorage.setItem('address', JSON.stringify(res.address));\r\n      })\r\n      .catch((e) => setLoadingMerchants(false));\r\n  }\r\n\r\n  function select(l) {\r\n    history.push(`/alo/checkout/${selected.id}/${l.id}${location.search}`);\r\n  }\r\n\r\n  function toggleSwap() {\r\n    if (!swap.show) {\r\n      setSwap({ loading: true, show: true });\r\n      fetch(GET_CATEGORY, { mode: 'cors' })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          setSwap({ loading: false, show: true });\r\n          setCategories(res);\r\n        })\r\n        .catch((e) => setSwap({ loading: false, show: false }));\r\n    } else {\r\n      setSwap({ loading: false, show: false });\r\n    }\r\n  }\r\n\r\n  function onSelectCategory(event) {\r\n    const category = event.target.value;\r\n    setLoadingImage(true);\r\n    fetch(\r\n      GET_CATEGORY_TYPE.replace('{categoryId}', category).replace(\r\n        '{typeId}',\r\n        selected.type_id\r\n      ),\r\n      { mode: 'cors' }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setImages(res);\r\n        setLoadingImage(false);\r\n      })\r\n      .catch((e) => setLoadingImage(false));\r\n  }\r\n\r\n  function selectImage(image) {\r\n    setSelected(image);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <div className=\"title\">\r\n          <div onClick={() => history.goBack()}>\r\n            <SvgBack />\r\n          </div>\r\n          <div>{selected?.name}</div>\r\n        </div>\r\n      </Header>\r\n      <Body>\r\n        {(loading && (\r\n          <div className=\"loader-container\">\r\n            <Loader size=\"large\" />\r\n          </div>\r\n        )) || (\r\n          <div className=\"page-detail\">\r\n            <div className={`item ${!expand && 'hidden'}`}>\r\n              <img src={selected?.url} alt={selected?.name} />\r\n\r\n              <div className=\"hcategory\">\r\n                <div className=\"switch-container\">\r\n                  trocar estampa\r\n                  <label className=\"switch\">\r\n                    <input type=\"checkbox\" onChange={toggleSwap} />\r\n                    <span className=\"slider round\"></span>\r\n                  </label>\r\n                </div>\r\n                <div className=\"category-container\">\r\n                  {swap.show &&\r\n                    ((swap.loading && <Loader />) || (\r\n                      <select onChange={onSelectCategory}>\r\n                        <option>selecione</option>\r\n                        {categories?.map((c) => (\r\n                          <option key={c.id} value={c.id}>\r\n                            {c.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"image-list\">\r\n                {swap.show &&\r\n                  ((loadingImage && <Loader />) ||\r\n                    (images &&\r\n                      images.map((i) => (\r\n                        <img\r\n                          key={i.id}\r\n                          src={i.thumb_url}\r\n                          onClick={() => selectImage(i)}\r\n                        />\r\n                      ))))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"stores\">\r\n              <div className=\"find\">\r\n                <button onClick={() => setExpand(!expand)}>\r\n                  <span className={`${expand ? 'bottom' : 'top'}`}>»</span>\r\n                </button>\r\n                <input\r\n                  ref={cepRef}\r\n                  onKeyUp={checkCEP}\r\n                  placeholder=\"Digite seu CEP\"\r\n                />\r\n                <button onClick={() => findMerchant()}>\r\n                  {(loadingMerchants && <Loader />) || '🔍'}\r\n                </button>\r\n              </div>\r\n              <div className=\"list\">\r\n                {merchants &&\r\n                  ((merchants?.length && (\r\n                    <>\r\n                      <div className=\"item\">\r\n                        <div className=\"i1 b\">Fornecedor</div>\r\n                        <div className=\"i2 b\">Preço</div>\r\n                        <div className=\"i3 b\">Frete</div>\r\n                        <span className=\"i5\">&nbsp;</span>\r\n                      </div>\r\n                      {merchants.map((l) => (\r\n                        <div key={l.id} className=\"item\">\r\n                          <div className=\"i1\">\r\n                            {l.name}\r\n                            <br />\r\n                            <span className=\"small\">\r\n                              {l.city} - {l.uf}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"i2\">\r\n                            <div className=\"small\">a partir de</div>R$\r\n                            {l.price}\r\n                          </div>\r\n                          <div className=\"i3\">{l.delivery}</div>\r\n                          <span className=\"i5\" onClick={() => select(l)}>\r\n                            <SvgMore size=\"small\" />\r\n                          </span>\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  )) || <h3>Nenhum fornecedor na sua localidade.</h3>)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Body>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport Loader from '../../components/Loader';\r\nimport Header from '../../components/Header';\r\nimport Body from '../../components/Body';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport SvgBack from '../../components/SvgBack';\r\nimport { GET_ATTRIBUTES } from '../../constants/endpoints';\r\n\r\nimport './style.scss';\r\n\r\nexport default function PageCheckout() {\r\n  const { productId, merchantId } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [product, setProduct] = useState();\r\n  const [merchant, setMerchant] = useState();\r\n  const [attributes, setAttributes] = useState();\r\n  const [attribute, selectAttribute] = useState();\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [price, setPrice] = useState(0);\r\n  const [priceTotal, setPriceTotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch(\r\n      GET_ATTRIBUTES.replace('{productId}', productId).replace(\r\n        '{merchantId}',\r\n        merchantId\r\n      )\r\n    )\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setProduct(res.product);\r\n        setAttributes(res.attributes);\r\n        setMerchant(res.merchant);\r\n        setLoading(false);\r\n      })\r\n      .catch((e) => setLoading(false));\r\n  }, []);\r\n\r\n  function next() {\r\n    if (!price) {\r\n      alert('escolha o tamanho e a quantidade');\r\n      return;\r\n    }\r\n\r\n    history.push(`/alo/checkout-info${location.search}`);\r\n    // store preço quantidade, tamanho\r\n  }\r\n\r\n  function updatePrice(q, p) {\r\n    setPrice(p);\r\n    setPriceTotal(q * p);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <div className=\"title\">\r\n          <div onClick={() => history.goBack()}>\r\n            <SvgBack />\r\n          </div>\r\n          <div>{merchant?.name}</div>\r\n        </div>\r\n      </Header>\r\n      <Body>\r\n        {(loading && (\r\n          <div className=\"loader-container\">\r\n            <Loader size=\"large\" />\r\n          </div>\r\n        )) || (\r\n          <>\r\n            <div className=\"page-checkout\">\r\n              <h5>{product?.name}</h5>\r\n              <div className=\"first\">\r\n                <div className=\"left-container\">\r\n                  <img src={product?.url} alt={product?.name} />\r\n                </div>\r\n                <div className=\"right-container\">\r\n                  <div className=\"attributes-container\">\r\n                    {attributes && attributes[0].type}\r\n                    <div className=\"options\">\r\n                      {attributes?.map((a, i) => (\r\n                        <div\r\n                          key={i}\r\n                          className={`button-check ${\r\n                            attribute?.id === a.id && 'selected'\r\n                          }`}\r\n                          onClick={() => {\r\n                            updatePrice(quantity, a.price);\r\n                            selectAttribute(a);\r\n                          }}\r\n                        >\r\n                          {a.value}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"quantity-container\">\r\n                    <span>Quantidade</span>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={quantity}\r\n                      onChange={(e) => {\r\n                        updatePrice(e.target.value, price);\r\n                        setQuantity(e.target.value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"price-container\">\r\n                    <span>Preço final</span>\r\n                    <div>R${priceTotal}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"next\">\r\n                <button onClick={() => next()}>Prosseguir</button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Body>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport Header from '../../components/Header';\r\nimport Body from '../../components/Body';\r\nimport { useHistory } from 'react-router';\r\nimport SvgBack from '../../components/SvgBack';\r\n\r\nimport './style.scss';\r\n\r\nexport default function PageCheckoutInfo() {\r\n  const history = useHistory();\r\n\r\n  function buy() {}\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <div className=\"title\">\r\n          <div onClick={() => history.goBack()}>\r\n            <SvgBack />\r\n          </div>\r\n          {/* <div>{product?.name}</div> */}\r\n        </div>\r\n      </Header>\r\n      <Body>\r\n        <>\r\n          <div className=\"page-checkout-info\">\r\n            {/* <h5>{merchant?.name}</h5> */}\r\n            <div className=\"buyer\">\r\n              <div>Endereço de entrega</div>\r\n              <input placeholder=\"Nome\" />\r\n              <input placeholder=\"Rua, bairro, número, complemento\" />\r\n              <input placeholder=\"Cidade\" />\r\n              <input placeholder=\"Celular\" />\r\n              <button onClick={() => buy()}>Pagar</button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      </Body>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport PageItems from './pages/PageItems';\r\nimport PageDetail from './pages/PageDetail';\r\nimport PageCheckout from './pages/PageCheckout';\r\nimport PageCheckoutInfo from './pages/PageCheckoutInfo';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/alo/\" exact>\r\n          <PageItems />\r\n        </Route>\r\n        <Route path=\"/alo/produto/:id\">\r\n          <PageDetail />\r\n        </Route>\r\n        <Route path=\"/alo/checkout/:productId/:merchantId\">\r\n          <PageCheckout />\r\n        </Route>\r\n        <Route path=\"/alo/checkout-info\">\r\n          <PageCheckoutInfo />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = (amount) => (dispatch) => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = (state) => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst urlParams = new URLSearchParams(window.location.search);\r\nlocalStorage.setItem('kindId', urlParams.get('kindId') || '2');\r\nlocalStorage.setItem('imprimaId', urlParams.get('imprimaId') || '');\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}